###########################################
############## DB 생성 드롭 #################

drop user 'cafe'@'%';

create user 'cafe'@'%' identified by 'cafe';

grant all privileges on cafe_db.* to 'cafe'@'%';

flush privileges;


-- db 생성
drop database cafe_db;

create database cafe_db
   default character set utf8mb4
    collate utf8mb4_general_ci
    default encryption='n'
;

show databases;

use cafe_db;

############## DB 생성 드롭 #################
###########################################


###########################################
############## table 생성  #################

-- DB 사용
use cafe_db;

-- Users 테이블 만들기
create table Users(

    user_id int primary key auto_increment, 		-- 회원 번호
    id varchar(100), 								-- 계정 아이디
    pw varchar(100), 								-- 계정 비밀번호
    user_name varchar(100),							-- 회원 이름
    user_hp varchar(50)								-- 회원 전화번호
    
); 

-- Users 테이블 데이터
insert into Users values(null, 'qwer', 'qwer', '이상혁', '010-1111-1111');
insert into Users values(null, 'mcu', 'mcu', '유재석', '010-2222-2222');
insert into Users values(null, 'leeh', 'leeh', '이효리', '010-3333-3333');
insert into Users values(null, 'ljj', 'ljj', '이정재', '010-4444-4444');
insert into Users values(null, 'nice', 'nice', '차은우', '010-5555-5555');


-- Drink 테이블 만들기
create table Drink(

    drink_id int primary key auto_increment, 		-- 음료 고유 번호
    drink_name varchar(100), 						-- 음료 이름
    drink_content varchar(100),						-- 음료 설명
    drink_price int 								-- 음료 가격
    
); 

-- Drink 테이블 데이터
insert into Drink values(null, '아메리카노(ICE)', '시원한 커피', 3500); -- 예시...


-- Receipt 테이블 만들기
create table Receipt(

    receipt_id int primary key auto_increment, 		     -- 영수증 번호
    receipt_date DATETIME DEFAULT CURRENT_TIMESTAMP,	 -- 주문이 들어온 시간(현재시간)
    receipt_finish DATETIME, 							 -- 음료제조 완료 시간
    receipt_state varchar(50),							 -- 주문 상태
    user_id int,  										 -- Users 테이블의 회원번호
    
    constraint Receipt_fk foreign key (user_id) 
    references Users(user_id)
    
); 


-- UserOrder 테이블 만들기
create table UserOrder (

    userOrder_id int primary key auto_increment, 		-- 회원의 주문번호
    receipt_id int, 									-- 영수증 번호
    drink_id int, 										-- Drink 테이블의 음료 고유 번호
    user_id int, 										-- Users 테이블의 회원번호
    drink_cnt int, 										-- 주문한 음료의 수량
    
    
    constraint foreign key (receipt_id) 
    references Receipt(receipt_id),
    
    constraint foreign key (drink_id) 
    references Drink(drink_id),
    
    constraint foreign key (user_id) 
    references Receipt(user_id)
    
    
    /*
    constraint UserOrder_fk foreign key (receipt_id) 
    references Receipt(receipt_id),
    
    constraint UserOrder_fk foreign key (drink_id) 
    references Drink(drink_id),
    
    constraint UserOrder_fk foreign key (user_id) 
    references Receipt(user_id)
    */
);

alter table UserOrder
add constraint UserOrder_fk foreign key (receipt_id) 
    references Receipt(receipt_id);

alter table UserOrder
add constraint foreign key (drink_id)                     ## UserOrder_fk foreign key (drink_id) 
    references Drink(drink_id);

alter table UserOrder
add constraint foreign key (user_id)                 ##UserOrder_fk foreign key (user_id) 
    references Receipt(user_id);


############## table 생성  #################
###########################################



###########################################
############## table 생성  #################


############## table 생성  #################
###########################################



select * 
from userOrder o join receipt r on o.receipt_id = r.receipt_id
where o.receipt = 222
;