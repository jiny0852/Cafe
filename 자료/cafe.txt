	// 0. import java.sql.*;
	private Connection conn = null;
	private PreparedStatement pstmt = null;
	private ResultSet rs = null;
	
	private String driver = "com.mysql.cj.jdbc.Driver";
	private	String url = "jdbc:mysql://localhost:3306/cafe_db";
	private String id = cafe";
	private String pw = "cafe";
	
	//생성자
	
	//메서드 gs
	
	//메서드 일반	
	
	// DB연결 메소드
	private void getConnection() {
		
		try {
			// 1. JDBC 드라이버 (Oracle) 로딩
			Class.forName(driver);
			
			// 2. Connection 얻어오기
			conn = DriverManager.getConnection(url, id, pw);
			
		} catch (ClassNotFoundException e) {
			System.out.println("error: 드라이버 로딩 실패 - " + e);
		} catch (SQLException e) {
			System.out.println("error:" + e);
		}
	}
	
	// 자원정리 메소드
	private void close() {
		// 5. 자원정리
		try {
			if (rs != null) {
					rs.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}
			if (conn != null) {
				conn.close();
			} 
		} catch (SQLException e) {
			System.out.println("error:" + e);
		}
	}
	



	//////////////////////////////////////////////////
	//책 전체 조회
	public List<BookVo> selectAllBook() {

		System.out.println("전체 조회 로직");

		//리스트 만들기
		List<BookVo> bookList = new ArrayList<BookVo>();

		int count = -1;
		
		this.getConnection();

		try {
			// 3. SQL문 준비 / 바인딩 / 실행

			// - sql문 준비
			String query = ""; 
			query += " select 	book_id, ";
			query += " 			title, ";
			query += " 			pubs, ";
			query += " 			pub_date, ";
			query += " 			author_id ";
			query += " from book ";
			query += " order by book_id asc ";

			// - 바인딩
			pstmt = conn.prepareStatement(query);

			// - 실행
			rs = pstmt.executeQuery();


			// 4.결과처리
			//리스트로 만들기
						
			while (rs.next()) {
			
				int bookId = rs.getInt("book_id");
				String title = rs.getString("title");
				String pubs = rs.getString("pubs");
				String pubDate = rs.getString("pub_date");
				int authorId = rs.getInt("author_id");
				
				BookVo bookVo = new BookVo(bookId, title, pubs, pubDate, authorId);
				bookList.add(bookVo);
				
				count++;
				
			}
			
			System.out.println(count + "건 조회 되었습니다.");

			
		}  catch (SQLException e) {
			System.out.println("error:" + e);
		}

		this.close();


		return bookList;
	}
	//책 전체 조회
	//////////////////////////////////////////////////

	//////////////////////////////////////////////////
	//책 하나 조회
	public BookVo selectOneBook(int id) {

		System.out.println("책 하나 조회 로직");

		BookVo bookVo = new BookVo();
		
		int count = -1; //최소값을 일부러 -1로 넣는다 

		this.getConnection();

		try {
			// 3. SQL문 준비 / 바인딩 / 실행

			// - sql문 준비
			String query = ""; 
			query += " select 	book_id, ";
			query += "			title, ";
			query += " 			pubs, ";
			query += " 			pub_date, ";
			query += " 			author_id ";
			query += " from book ";
			query += " where book_id = ? ";

			// - 바인딩
			pstmt = conn.prepareStatement(query);
			pstmt.setInt(1, id);
			

			// - 실행
			rs = pstmt.executeQuery();
			

			// 4.결과처리
			//리스트로 만들기
						
			while (rs.next()) {
			
				int bookId = rs.getInt("book_id");
				String title = rs.getString("title");
				String pubs = rs.getString("pubs");
				String pubDate = rs.getString("pub_date");
				int authorId = rs.getInt("author_id");
				
				bookVo.setBookId(bookId);
				bookVo.setTitle(title);
				bookVo.setPubs(pubs);
				bookVo.setPub_date(pubs);
				bookVo.setAuthor_id(authorId);
				
			}
			
			
			System.out.println( (count+2) + "건 조회 되었습니다.");

			
		}  catch (SQLException e) {
			System.out.println("error:" + e);
		}

		this.close();

		return bookVo; //리스트의 주소를 리턴한다
	}
	//책 하나 조회
	//////////////////////////////////////////////////





/////////////////////////////Vo

public class cafeVo {
	
	///////  필드
	
	// Users table
	private int userId;
	private String id;
	private int pw;
	private String userName;
	private String userHp;
	
	
	// Drink table
	private int drinkId;
	private String drinkName;
	private String drinkContent;
	private int drinkPrice;
	
	// Receipt table
	private int receiptId;
	private String receiptDate;
	private String receiptFinish;
	private String receiptState;
	//private int userId;
	
	// UserOrder table
	private int userOrderId;
	//private int receiptId;
	//private int drinkId;
	//private int userId;
	private int drink_cut;

	
	//  필드   ///////////////////////////////////////
	
	///////  생성자
	
	public cafeVo() {
	}
	public cafeVo(int userId, String id, int pw, String userName, String userHp, int drinkId, String drinkName,
			String drinkContent, int drinkPrice, int receiptId, String receiptDate, String receiptFinish,
			String receiptState, int userOrderId, int drink_cut) {
		super();
		this.userId = userId;
		this.id = id;
		this.pw = pw;
		this.userName = userName;
		this.userHp = userHp;
		this.drinkId = drinkId;
		this.drinkName = drinkName;
		this.drinkContent = drinkContent;
		this.drinkPrice = drinkPrice;
		this.receiptId = receiptId;
		this.receiptDate = receiptDate;
		this.receiptFinish = receiptFinish;
		this.receiptState = receiptState;
		this.userOrderId = userOrderId;
		this.drink_cut = drink_cut;
	}
	
	//  생성자   ///////////////////////////////////////
	
	
	///////  메서드 gs
	
	public int getUserId() {
		return userId;
	}
	public void setUserId(int userId) {
		this.userId = userId;
	}
	public String getId() {
		return id;
	}
	public void setId(String id) {
		this.id = id;
	}
	public int getPw() {
		return pw;
	}
	public void setPw(int pw) {
		this.pw = pw;
	}
	public String getUserName() {
		return userName;
	}
	public void setUserName(String userName) {
		this.userName = userName;
	}
	public String getUserHp() {
		return userHp;
	}
	public void setUserHp(String userHp) {
		this.userHp = userHp;
	}
	public int getDrinkId() {
		return drinkId;
	}
	public void setDrinkId(int drinkId) {
		this.drinkId = drinkId;
	}
	public String getDrinkName() {
		return drinkName;
	}
	public void setDrinkName(String drinkName) {
		this.drinkName = drinkName;
	}
	public String getDrinkContent() {
		return drinkContent;
	}
	public void setDrinkContent(String drinkContent) {
		this.drinkContent = drinkContent;
	}
	public int getDrinkPrice() {
		return drinkPrice;
	}
	public void setDrinkPrice(int drinkPrice) {
		this.drinkPrice = drinkPrice;
	}
	public int getReceiptId() {
		return receiptId;
	}
	public void setReceiptId(int receiptId) {
		this.receiptId = receiptId;
	}
	public String getReceiptDate() {
		return receiptDate;
	}
	public void setReceiptDate(String receiptDate) {
		this.receiptDate = receiptDate;
	}
	public String getReceiptFinish() {
		return receiptFinish;
	}
	public void setReceiptFinish(String receiptFinish) {
		this.receiptFinish = receiptFinish;
	}
	public String getReceiptState() {
		return receiptState;
	}
	public void setReceiptState(String receiptState) {
		this.receiptState = receiptState;
	}
	public int getUserOrderId() {
		return userOrderId;
	}
	public void setUserOrderId(int userOrderId) {
		this.userOrderId = userOrderId;
	}
	public int getDrink_cut() {
		return drink_cut;
	}
	public void setDrink_cut(int drink_cut) {
		this.drink_cut = drink_cut;
	}

	

	//  메서드 gs   ///////////////////////////////////////
	
	
	///////  메서드 일반
	
	@Override
	public String toString() {
		return "cafeVo [userId=" + userId + ", id=" + id + ", pw=" + pw + ", userName=" + userName + ", userHp="
				+ userHp + ", drinkId=" + drinkId + ", drinkName=" + drinkName + ", drinkContent=" + drinkContent
				+ ", drinkPrice=" + drinkPrice + ", receiptId=" + receiptId + ", receiptDate=" + receiptDate
				+ ", receiptFinish=" + receiptFinish + ", receiptState=" + receiptState + ", userOrderId=" + userOrderId
				+ ", drink_cut=" + drink_cut + "]";
	}
	
	
	//  메서드 일반   ///////////////////////////////////////

}
